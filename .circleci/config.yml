version: 2.1
orbs:
  gradle: circleci/gradle@2.2.0

checkout_project_root: &checkout_project_root
  # Override checkout path to project root (see: https://circleci.com/docs/2.0/configuration-reference/#checkout)
  checkout:
    path: ~/openlineage


# Only trigger CI job on release (=X.Y.Z) with possible (rcX)
only-on-release: &only-on-release
  filters:
    tags:
      only: /^[0-9]+(\.[0-9]+){2}(-?rc[0-9]+)?$/
    branches:
      ignore: /.*/


jobs:
  test-client-python:
    working_directory: ~/openlineage/client/python
    docker:
      - image: circleci/python:3.6
    steps:
      - *checkout_project_root
      - run: pip install --user  -r test-requirements.txt
      - run: python -m flake8 --extend-ignore=F401
      - run: python -m pytest --cov=openlineage tests/
      - run: bash <(curl -s https://codecov.io/bash)

  build-client-python:
    working_directory: ~/openlineage/client/python
    docker:
      - image: circleci/python:3.6
    steps:
      - *checkout_project_root
      - run: python setup.py bdist_wheel
      - persist_to_workspace:
          root: .
          paths:
            - ./dist/*.tar.gz
            - ./dist/*.whl

  release-client-python:
    working_directory: ~/openlineage
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: pip install wheel twine
      - run: python -m twine upload --non-interactive --verbose --repository pypi dist/*

  release-java:
    working_directory: ~/openlineage/client/java
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - *checkout_project_root
      - run: |
          # Get, then decode the GPG private key used to sign *.jar
          export ORG_GRADLE_PROJECT_signingKey=$(echo $GPG_SIGNING_KEY | base64 -d)
          # Publish *.jar
          gradle publish

workflows:
  checkout-build-test:
    jobs:
      - gradle/test:
          app_src_directory: client/java
      - test-client-python
  release:
    jobs:
      - build-client-python:
          <<: *only-on-release
      - release-client-python:
#          <<: *only-on-release
          context: release
          requires:
            - build-client-python
      - release-java:
          context: release
          <<: *only-on-release
